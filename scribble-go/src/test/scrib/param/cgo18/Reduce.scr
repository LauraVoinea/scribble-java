//Raymond@HZHL3 ~/code/eclipse/scribble/github.com/rhu1-go/scribble-java
//$ bin/scribblec-param.sh -ip scribble-go/src/test/scrib/ -d scribble-go/src/test/scrib/ scribble-go/src/test/scrib/param/cgo18/SumEuler.scr -param Proto1

module param.cgo18.Reduce;


type <go> "int" from "..." as int;
type <go> "int[]" from "..." as intarray;


//*
global protocol Reduce( role M(N)
                      , role W(N)
                      , role R(N)
                      )
{
	/* // ??
	M --> W[0][1..n] : <[] int>
	forall (i < log n),
		 forall (j < i),
				 W[i][j*2] --> W[i+1][j] . W[i][j*2+1] --> W[i+1][j]
	W[log n][0] --> M
	*/

	distrib(intarray) from M[1..1] to W[1..8*N];

        // These ranges seem to fail
	redl1(intarray) from W[1      ..  N] to R[1..1];
	redl1(intarray) from W[   N +1..2*N] to R[2..2];
	redl1(intarray) from W[(2*N)+1..3*N] to R[3..3];
	redl1(intarray) from W[(3*N)+1..4*N] to R[4..4];
	redl1(intarray) from W[(4*N)+1..5*N] to R[5..5];
	redl1(intarray) from W[(5*N)+1..6*N] to R[6..6];
	redl1(intarray) from W[(6*N)+1..7*N] to R[7..7];
	redl1(intarray) from W[(7*N)+1..8*N] to R[8..8];

        /* Can we simplify this? */
        redl2(intarray)  dot  R[5..8]       to R[1..4];
        redl3(intarray)  dot  R[3..4]       to R[1..2];
        redl4(intarray)  dot  R[2..2]       to R[1..1];
        gather(intarray) dot  R[1..1]       to M[1..1];
}
//*/
